包
    包就是文件夹，管理不同功能的java类，方便后期代码维护
    包名规则：
        公司域名反写 + 包的作用，全部英文小写，见名知意
        包名+类名----称为全类名/全限定名
        在代码中反复书写全类名过于麻烦，所以利用import + 全类名 进行导包
    使用其他类的规则：
        使用同一个包的类不需要导包
        使用java.lang包中的类不需要导包
        其他情况都需要导包
        如果同时使用两个包中的同名类，就需要用全类名

final
    可以修饰方法、类、变量，表面不可被改变的
    修饰方法---最终方法，不能被修改
    修饰类---最终类，不能被继承
    修饰变量---常量，只能赋值一次
        常量命名规范
            单个单词全部大写
            多个单词全部大写，单词之间用_隔开
        细节
            final修饰的变量是基本类型：变量存储的数据值不能改变
            final修饰的变量是引用类型：变量存储的地址值不能改变，对象内部可以改变

权限修饰符
    控制一个成员能够被访问的范围，修饰成员变量，方法，构造方法，内部类
    四种：从小到大 private---空着不写/缺省/默认---protected---public
        private：同一个类中
        缺省：同一个类中，同一个包的其他类
        protected：同一个类中，同一个包的其他类，不同包下的子类
        public：所有
    使用规则：
        一般只用private和public
        成员变量私有
        方法公开
        特例： 如果方法中的代码是抽取其他方法中共性代码，这个方法一般也私有

代码块
    局部代码块
        写在方法中的单独代码块，作用是可以提前结束变量的生命周期
    构造代码块
        写在成员位置的代码块
        作用：可以把多个构造方法中重复的代码抽取出来
        执行时机：在创建本类对象时会先执行构造代码块再执行构造方法
        注：由于不够灵活，渐渐淘汰
    静态代码块
        格式：static{}
        特点：通过static修饰，随着类的加载而加载，自动触发，只执行一次
        使用场景：类加载的时候做数据初始化