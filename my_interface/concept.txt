接口
    为什么有接口
        接口就是一种规则，用于处理父类的子类中有多个但并非全部的共性，是对行为的抽象
    接口的应用
        当需要的不是一个继承体系，而是侧重于要做的事，就可以应用接口
    如何定义一个接口
        public interface 接口名{}
    如何使用一个接口
        接口不能实例化
        接口和类是实现关系，通过implements关键字表示
            public class 类名 implements 接口名{}
        接口的子类称为实现类
            要么重写接口中所有抽象方法
            要么是抽象类
        注：接口和类的关系可以多实现
                public class 类名 implements 接口1, 接口2{}
            实现类还可以继承一个类的同时实现多个接口
                public class 类名 extends 父类 implements 接口1, 接口2{}
    接口中成员的特点
        成员变量    
            只能是常量
            默认修饰符 public static final //没写也会自动加上， 规则不可变
        构造方法
            没有
        成员方法
            只能是抽象方法，默认修饰public abstract
    接口和类之间的关系
        类与类
            继承关系，只能单继承，可以多层继承
        类与接口
            实现关系，可以单、多实现，可继承同时实现多个接口
            当多个接口中有重名的方法时，重写一次即可
        接口与接口
            继承关系，可以单继承，也可以多继承
            细节：实现类如果实现的是最下面的子接口，就要重写所有的抽象方法