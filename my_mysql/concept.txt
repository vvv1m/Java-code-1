连接至mysql客户端
    mysql -u root -p

数据库的数据模型
    有客户端和MySQL数据库服务器两大部件
    客户端会给服务器发送MySQL指令 而数据库服务器中有一个软件叫DBMS---数据库管理系统 它会维护并操作我们的数据库
        当然也可以创建数据库，一个数据库服务器可以有多个数据库，而数据库中又会有多张表

MySQL数据库是关系型数据库 --- 建立在关系模型基础上，由多张相互连接的二维表组成的数据库
    使用表结构进行存储 格式统一 便于维护
    使用SQL语言操作，标准统一 使用方便

SQL通用语法
    SQL可以单行或多行书写，以分号结尾
    可以使用空格 缩进来增强语句的可读性
    MySQL数据库的SQL语句不区分大小写，关键字建议用大写
    注释 ： 单行注释： --注释内容 或 #注释内容（MySQL独有）
            多行注释： /* 注释内容 */
SQL分类
    DDL Data Definition Language 数据定义语言，用来定义数据库对象（数据库、表、字段）
    DML Data Manipulation Language 数据操作语言， 用来对数据库中的数据进行增删改
    DQL Data Query Language 数据查询语言 用来查询数据库表中的记录
    DCL Data Control Language 数据控制语言，用来创建数据库用户、控制数据库的访问权限

DDl数据库操作
    查询
        查询所有数据库
        SHOW DATABASES;
        查询当前数据库
        SELELCT DATABASE();
    创建              
        CREATE DATABASE [IF NOT EXISTS] 数据库名 [DEFAULT CHARSET 字符集][COLLATE 排序规则];
            []中的是可写可不写的命令
            IF NOT EXISTS 如果数据库名称不存在则创建，如果存在则不执行任何操作
            DEFAULT CHARSET 字符集 指定当前数据库所用的字符集，可以省略因为数据库有默认的字符集
            COLLATE 排序规则 指定排序规则
    删除
        DROP DATABASE[IF EXISTS]数据库名;
            IF EXISTS 如果存在则删除
    使用 
        USE 数据库名;
DDL表操作
    查询
        查询当前数据库中的所有表
        SHOW TABLES;
        查询表结构
        DESC 表名;
        查询指定表的建表语句
        SHOW CREATE TABLE 表名;
    创建
        CREATE TABLE 表名(
            字段1 字段1类型[COMMENT 字段1注释],
            字段2 字段2类型[COMMENT 字段2注释],
            .....
            字段n 字段n类型[COMMENT 字段n注释]
        )[COMMENT 表注释];
    数据类型
        数值类型
              类型      大小          有符号范围            无符号范围                  描述
            TINYINT     1byte       (-128,127)              (0,255)                 小整数值
            SMALLINT    2bytes      (-32768,32767)          (0,65535)               大整数值
            MEDIUMINT   3           (-8388608,8388607)      (0,16777215)            大整数值
           INT/INTEGER  4           (-2147483648,2147483647)(0,4294967295)          大整数值
            BIGINT      8           (-2^63,2^63-1)          (0,2^64-1)              极大整数值
            FLOAT       4           (-3.402823466 E+38, 3.402823466 E+38)
                                                            (0, 3.402823466 E+38)   单精度浮点值
            DOUBLE      8           (-1.7976931348623157 E+308, 1.7976931348623157 E+308)
                                                            (0, 1.7976931348623157 E+308)
                                                                                    双精度浮点值
            DECIMAL                 依赖于M和D的值           依赖于M和D的值           小数值(精准定点数)
            注 这里M是精度 D是标度，举例来说 123.45 M为5，是整个数的长度 D为2，是小数部分的长度
            使用DOUBLE的时候要注意添加两个参数，比如创建一个成绩 Score double(4,1) 前参数为整体的位数，后参数为小数的参数
        字符串类型
            类型            大小                     表述
            CHAR            0-255 bytes             定长字符串，不足长度时用空格填充
            VARCHAR         0-65535 bytes           变长字符串，根据实际内容长度存储
            TINYBLOB        0-255 bytes             不超过255个字节的二进制数据
            TINYTEXT        0-255 bytes             短文本字符串
            BLOB            0-65535 bytes	        二进制形式的长文本数据
            TEXT            0-65535 bytes           长文本数据
            MEDIUMBLOB      0-16777215 bytes        二进制形式的中等长度文本数据
            MEDIUMTEXT      0-16777215 bytes        中等长度文本数据
            LONGBLOB        0-4294967295 bytes      二进制形式的极大文本数据
            LONGTEXT        0-4294967295 bytes      极大文本数据
            注 在使用前两个的时候的时候要在后面跟上如(10)形式的参数，指当前字符串能存储的最大长度
                如果是定长字符串char，写char(10)后即使是一个字符串也会占用10个字符的空间，未占用的会用空格补位
                使用varchar就会存几个字符用几个字符的空间
                char的性能要略强于varchar，原因是varchar在使用的时候会根据内容计算使用的空间
        日期时间类型